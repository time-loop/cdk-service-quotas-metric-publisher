"use strict";var l=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var N=(e,o)=>{for(var s in o)l(e,s,{get:o[s],enumerable:!0})},f=(e,o,s,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let r of C(o))!S.call(e,r)&&r!==s&&l(e,r,{get:()=>o[r],enumerable:!(n=p(o,r))||n.enumerable});return e};var Q=e=>f(l({},"__esModule",{value:!0}),e);var I={};N(I,{monitor:()=>g});module.exports=Q(I);var c=require("@aws-sdk/client-cloudwatch"),u=require("@aws-sdk/client-service-quotas"),g=async()=>{try{if(!process.env.CW_NAMESPACE)throw new Error("CW_NAMESPACE environment variable not set");if(!process.env.SERVICE_QUOTAS_LIST)throw new Error("SERVICE_QUOTAS_LIST environment variable not set");if(!process.env.REGIONS_TO_MONITOR)throw new Error("REGIONS_TO_MONITOR environment variable not set");let e=process.env.CW_NAMESPACE,o=JSON.parse(process.env.SERVICE_QUOTAS_LIST),s=JSON.parse(process.env.REGIONS_TO_MONITOR),n=[];for(let a of s){console.log(`Getting service quotas for region ${a}`);let v=new u.ServiceQuotasClient({region:a});for(let t of o){console.log(`Getting service quota for ${t.serviceCode} - ${t.quotaCode}`);let m={ServiceCode:t.serviceCode,QuotaCode:t.quotaCode},d=new u.GetServiceQuotaCommand(m),i=await v.send(d);console.log(`Successfully called getServiceQuota for ${t.serviceCode} - ${t.quotaCode}.
 Data: ${JSON.stringify(i)}`),n.push({serviceCode:t.serviceCode,quotaCode:t.quotaCode,quotaName:i.Quota?.QuotaName,value:i.Quota?.Value,region:a})}}let r=new c.CloudWatchClient;for(let a of n){let t=[{MetricName:"ServiceQuotasApplied",Dimensions:[{Name:"QuotaCode",Value:a.quotaCode},{Name:"QuotaName",Value:a.quotaName},{Name:"ServiceCode",Value:a.serviceCode},{Name:"AwsRegion",Value:a.region}],Unit:"Count",Value:a.value}],m={Namespace:e,MetricData:t},d=new c.PutMetricDataCommand(m),i=await r.send(d);console.log(`Successfully pushed metric data to namespace ${e} - ${JSON.stringify(i)}`)}return n.length===0?console.log("No results to publish"):console.log("Successfully pushed metric data"),{servicesQuotasApplied:n}}catch(e){throw console.error(e),e}};0&&(module.exports={monitor});
